@model cocycle_admin.Models.ApplicationUser

@{
    ViewBag.Title = "EditUser";
    Layout = "~/Views/Shared/AdminLayout.cshtml";
}
@section Style{
    <link href="https://cdn.jsdelivr.net/npm/select2@4.1.0-rc.0/dist/css/select2.min.css" rel="stylesheet" />
    @*<link href="~/Content/Assets/plugins/select2-bootstrap4-theme/select2-bootstrap4.css" rel="stylesheet" />*@
}
<div class="content-header">
    <div class="container">
        <div class="row mb-2">
            <div class="col-sm-6">
                <h1 class="m-0 text-dark">Users</h1>
            </div><!-- /.col -->
            <div class="col-sm-6">
                <ol class="breadcrumb float-sm-right">
                    <li class="breadcrumb-item"><a href="#">Home</a></li>
                    <li class="breadcrumb-item active">Users</li>
                </ol>
            </div><!-- /.col -->
        </div><!-- /.row -->
    </div><!-- /.container-fluid -->
</div>
<section class="content">
    <div class="container">
        <div class="row">
            <div class="col-md-12">
                <div class="card card-info">
                    <div class="card-header">
                        <h3 class="card-title">Edit User</h3>
                    </div>
                    <div class="card-body">
                        @using (Html.BeginForm("Edit", "ManageUser", FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
                        {
                            @Html.AntiForgeryToken()
                            @Html.ValidationSummary("", new { @class = "text-danger" })

                            <div class="row">
                                <div class="col-md-6">
                                    <div class="form-group">

                                        <div class="col-md-12">
                                            @Html.LabelFor(m => m.Name, new { @class = " control-label" })
                                            @Html.TextBoxFor(m => m.Name, new { @class = "form-control" })
                                        </div>
                                    </div>
                                    <div class="form-group">

                                        <div class="col-md-12">
                                            @Html.LabelFor(m => m.Email, new { @class = " control-label" })
                                            <div class="form-control" style="background-color:lightgrey">
                                                @Model.Email
                                            </div>
                                            @Html.HiddenFor(m => m.Email, new { @class = "form-control" })
                                            @Html.HiddenFor(m => m.UserName, new { @class = "form-control" })
                                            @Html.HiddenFor(m => m.ImageAddress, new { @class = "form-control" })
                                        </div>
                                    </div>
                                    <div class="form-group">

                                        <div class="col-md-12">
                                            @Html.LabelFor(m => m.PhoneNumber, new { @class = " control-label" })
                                            @Html.TextBoxFor(m => m.PhoneNumber, new { @class = "form-control" })
                                        </div>
                                    </div>
                                    <div class="form-group">

                                        <div class="col-md-12">
                                            @Html.LabelFor(m => m.Address, new { @class = " control-label" })
                                            @Html.TextBoxFor(m => m.Address, new { @class = "form-control" })
                                        </div>
                                    </div>


                                </div>
                                <div class="col-md-6">
                                    <div class="form-group">
                                        <div class="col-md-12">
                                            <label class="control-label">Post Code</label>
                                            @Html.DropDownList("PostCodeId", new SelectList(ViewBag.postCodes, "Id", "PostCodeName"), " Select PostCode", new { @class = "form-control select2bs4" })
                                            @Html.ValidationMessageFor(model => model.PostCodeId, "", new { @class = "text-danger" })
                                        </div>
                                    </div>
                                    <div class="form-group">

                                        <div class="col-md-12">
                                            <label class="control-label">State</label>
                                            @Html.DropDownList("StateId", new SelectList(ViewBag.States, "StateId", "StateName"), " Select State", new { @class = "form-control" })
                                            @Html.ValidationMessageFor(model => model.StateId, "", new { @class = "text-danger" })
                                        </div>
                                    </div>
                                    <div class="form-group">

                                        <div class="col-md-12">
                                          <label class="control-label">City</label>
                                            @Html.DropDownList("AreaId", new SelectList(ViewBag.areas, "Id", "StateName"), " Select Area", new { @class = "form-control" })
                                            @Html.ValidationMessageFor(model => model.AreaId, "", new { @class = "text-danger" })
                                        </div>
                                    </div>
                                    @*<div class="form-group">
                                            @Html.LabelFor(m => m.TravellingDistance, new { @class = " control-label" })
                                            <div class="col-md-10">
                                                @Html.TextBoxFor(m => m.TravellingDistance, new { @class = "form-control" })
                                            </div>
                                        </div>*@
                                    <div class="form-group">
                                        <div class="col-md-12">
                                            @Html.LabelFor(m => m.IsAvailable, new { @class = " control-label" })
                                            @Html.CheckBoxFor(m => m.IsAvailable)
                                        </div>
                                    </div>

                                    <div class="form-group">
                                        <div class=" col-md-10">
                                            <input type="submit" class="btn btn-primary " value="Submit" />
                                        </div>
                                    </div>


                                </div>
                            </div>

                            <div class="form-group">
                                <div class="col-md-offset-2 col-md-10">
                                    @Html.ActionLink("Back to List", "ViewAll", "", new { @class = "btn btn-default" })
                                </div>
                            </div>
                        }
                    </div>
                </div>
            </div>
        </div>
    </div>
</section>


@section Scripts {

    <script src="https://cdn.jsdelivr.net/npm/select2@4.1.0-rc.0/dist/js/select2.min.js"></script>

    @Scripts.Render("~/bundles/jqueryval")
<script type="text/javascript">



    var ddlarea = document.getElementById("AreaId");
        var a = $('#StateId option:selected').val();
        fillarea(a);


    $('#StateId').change(function () {
        var id = $('#StateId option:selected').val();
           // alert(id);
            if (id > 0) {

            $.ajax({
                type: 'POST',
                url:'@Url.Content("~/Areas/GetByState/")',
                //url: '/State/GetByState/' + id + '',
                data: "{Stateid:'" + id + "'}",
                dataType: 'json',
                contentType: "application/json",
                success: function (data) {
                    console.log(data);
                    ddlarea.innerHTML = "";
                    data.forEach((item) => {
                        ddlarea.options[ddlarea.options.length] = new Option(item.AreaName, item.Id);
                    });
                },

            });
        }
            else {
                ddlarea.innerHTML = "";
                ddlarea.options[ddlarea.options.length] = new Option("Select Area", "");
            }
        });

         $('#PostCodeId').change(function () {
        var postcodeid = $('#PostCodeId').val();
        if (postcodeid == "") {
            $('#StateId').val("");
            $('#AreaId').val("");
        } else {
        $.ajax({
                type: 'POST',
                url:'@Url.Content("~/PostCodes/GetstateandArea/")',
                  data: "{postcode:'" + postcodeid + "'}",
                dataType: 'json',
                contentType: "application/json",
                success: function (data) {
                    console.log(data);
                    $('#StateId').val(data.StateId);
                   // getarea(data.StateId, data.AreaId);
                    $('#AreaId').val(data.AreaId);
                },

            });
        }

    });
        $("#PostCodeId").select2({
            theme: "classic",
            placeholder: "Start Post Code",
            allowClear: true,
            ajax: {
                url: "../../PostCodes/Getpostcode",
                type: 'get',
                dataType: 'json',
                //delay: 500,
                data: function (params) {
                    return {
                        searchTerm: params.term,
                        areaid:$('#AreaId').val(),
                    };
                },
                processResults: function (res) {
                    return {
                        results: res
                    }
                },
                cache: true,
            }
        });

        function fillarea(stateid) {

            console.log(stateid);

            $.ajax({
                type: 'POST',
                url:'@Url.Content("~/Areas/GetByState/")',
                //url: '/State/GetByState/' + id + '',
                data: "{Stateid:'" + stateid + "'}",
                dataType: 'json',
                contentType: "application/json",
                success: function (data) {
                    console.log(data);
                    ddlarea.innerHTML = "";
                    data.forEach((item) => {
                        ddlarea.options[ddlarea.options.length] = new Option(item.AreaName, item.Id);
                    });
                },

            });

        }

</script>
}
